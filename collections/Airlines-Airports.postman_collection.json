{
	"info": {
		"_postman_id": "317aeefa-e505-47fa-9cbc-126a00f1d15d",
		"name": "Airlines-Airports",
		"description": "This collection helps to see different scenarios for associating, obtaining, updating and deleting airports associated with an specific airline in the API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airline_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"LATAM Airlines Colombia\",\r\n    \"description\": \"Descubrir el mundo es una gran aventura, ¡y para nosotros estar a tu lado en estos momentos es lo que nos mueve! Cada vez que un avión de LATAM despega, está llevando docenas de sueños y deseos, incluso algunos de ellos son proyectos de toda una vida. Y no existen límites para nuestros sueños.\",\r\n    \"foundeddate\": \"2016-05-05\",\r\n    \"webpage\": \"https://www.latamairlines.com/co/es\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/airlines",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines"
					]
				},
				"description": "This request creates a new airport to be used in the rest of the collection. The API returns the created resource with the assigned ID."
			},
			"response": []
		},
		{
			"name": "Create first airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airport_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Aeropuerto Internacional Ernesto Cortissoz\",\r\n    \"code\": \"BAQ\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Barranquilla\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/airports",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airports"
					]
				},
				"description": "This request creates the first new airport to be used in the rest of the collection. The API returns the created resource with the assigned ID."
			},
			"response": []
		},
		{
			"name": "Create second airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airport_id_2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Aeropuerto Internacional José Maria Córdoba\",\r\n    \"code\": \"MED\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Medellín\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/airports",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airports"
					]
				},
				"description": "This request creates the second new airport to be used in the rest of the collection. The API returns the created resource with the assigned ID."
			},
			"response": []
		},
		{
			"name": "Add first airport to an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_1}}"
					]
				},
				"description": "This request associates an existing airport to an existing airline. The API returns the relevant information of the affected airline, including its airports."
			},
			"response": [
				{
					"name": "Add an airport to an airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"34cce733-f5c1-47a2-b3d7-ece260e27d4e\",\r\n    \"name\": \"Wingo\",\r\n    \"description\": \"Nuestras tarifas bajas y red de rutas son la combinación perfecta que te escapes a los lugares que siempre has querido conocer. Además, en Wingo, creemos en la libertad y por eso, con nosotros personalizas tu experiencia de viaje a la medida de tus gustos, necesidades y presupuesto. Así, solo pagas por lo que realmente quieres.\",\r\n    \"foundeddate\": \"2016-10-19T05:00:00.000Z\",\r\n    \"webpage\": \"https://www.wingo.com/\",\r\n    \"airports\": [\r\n        {\r\n            \"id\": \"ad69b80b-3ab7-4a99-9354-7bca6fa04e3a\",\r\n            \"name\": \"Aeropuerto Internacional El Dorado\",\r\n            \"code\": \"BOG\",\r\n            \"country\": \"Colombia\",\r\n            \"city\": \"Bogotá D.C.\"\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "Add an invalid airport to an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{invalid_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{invalid_id}}"
					]
				},
				"description": "This request returns a 404 Not Found when trying to associates a non existing airport to an existing airline."
			},
			"response": [
				{
					"name": "Add an invalid airport to an airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{invalid_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{invalid_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The airport with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Get all airports from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports"
					]
				},
				"description": "This request the list of airports associated to an existing airline."
			},
			"response": [
				{
					"name": "Get all airports from an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\r\n    {\r\n        \"id\": \"ad69b80b-3ab7-4a99-9354-7bca6fa04e3a\",\r\n        \"name\": \"Aeropuerto Internacional El Dorado\",\r\n        \"code\": \"BOG\",\r\n        \"country\": \"Colombia\",\r\n        \"city\": \"Bogotá D.C.\"\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Get an airport from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_1}}"
					]
				},
				"description": "This request return the information of the existing airport that has been previously assigned to the specific existing airline."
			},
			"response": [
				{
					"name": "Get an airport from an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"ad69b80b-3ab7-4a99-9354-7bca6fa04e3a\",\r\n    \"name\": \"Aeropuerto Internacional El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogotá D.C.\"\r\n}"
				}
			]
		},
		{
			"name": "Get a non associated airport from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The airport with the given id is not associated with the airline\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id_2}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_2}}"
					]
				},
				"description": "This requests return a 412 Precondition Failed error when trying to obtain the information of an existing airport that was not previously been associated with the specified existing airline."
			},
			"response": [
				{
					"name": "Get a non associated airport from an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id_2}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_2}}"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 412,\r\n    \"message\": \"The airport with the given id is not associated with the airline\"\r\n}"
				}
			]
		},
		{
			"name": "Update list of airline airports",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"{{airport_id_1}}\"\r\n    },\r\n    {\r\n        \"id\": \"{{airport_id}}\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports"
					]
				},
				"description": "This request updates the associated airports to an existing airline with all provided existing airports."
			},
			"response": [
				{
					"name": "Update list of airline airports",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"0d64bb44-159d-4196-9335-27d0c0a0dbc8\",\r\n        \"name\": \"Aeropuerto Internacional Ernesto Cortissoz\",\r\n        \"code\": \"BAQ\",\r\n        \"country\": \"Colombia\",\r\n        \"city\": \"Barranquilla\"\r\n    },\r\n    {\r\n        \"id\": \"0e7962f2-6c39-457a-84e8-6f350b20cf5e\",\r\n        \"name\": \"Aeropuerto Internacional El Dorado\",\r\n        \"code\": \"BOG\",\r\n        \"country\": \"Colombia\",\r\n        \"city\": \"Bogotá D.C.\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"d9338488-fae2-4a04-975b-a4598a31a422\",\r\n    \"name\": \"LATAM Airlines Colombia\",\r\n    \"description\": \"Descubrir el mundo es una gran aventura, ¡y para nosotros estar a tu lado en estos momentos es lo que nos mueve! Cada vez que un avión de LATAM despega, está llevando docenas de sueños y deseos, incluso algunos de ellos son proyectos de toda una vida. Y no existen límites para nuestros sueños.\",\r\n    \"foundeddate\": \"2016-05-05T05:00:00.000Z\",\r\n    \"webpage\": \"https://www.latamairlines.com/co/es\",\r\n    \"airports\": [\r\n        {\r\n            \"id\": \"adf7ad53-40c6-4a11-9795-6aef6148e0b3\"\r\n        },\r\n        {\r\n            \"id\": \"88d876cf-9322-4ef0-860e-9fd05e93e3d7\"\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "Update list of airline airports with an invalid airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"{{airport_id_1}}\"\r\n    },\r\n    {\r\n        \"id\": \"{{invalid_id}}\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports"
					]
				},
				"description": "This request returns a 404 Not Found error when trying to update the associated airports from an existing airline in which one of the provided airports does not exist."
			},
			"response": [
				{
					"name": "Update list of airline airports with an invalid airport",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"0d64bb44-159d-4196-9335-27d0c0a0dbc8\",\r\n        \"name\": \"Aeropuerto Internacional Ernesto Cortissoz\",\r\n        \"code\": \"BAQ\",\r\n        \"country\": \"Colombia\",\r\n        \"city\": \"Barranquilla\"\r\n    },\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"name\": \"Aeropuerto Internacional El Dorado\",\r\n        \"code\": \"BOG\",\r\n        \"country\": \"Colombia\",\r\n        \"city\": \"Bogotá D.C.\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The airport with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Delete an airport from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_1}}"
					]
				},
				"description": "This request removes the existing airport from the airports associated with the existing airline. The API simply return a 204 code."
			},
			"response": [
				{
					"name": "Delete an airport from an airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_1}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a non associated airport from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The airport with the given id is not associated with the airline\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id_2}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_2}}"
					]
				},
				"description": "This requests return a 412 Precondition Failed error when trying to remove an existing airport that was not previously associated with the existing airline."
			},
			"response": [
				{
					"name": "Delete a non associated airport from an airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/airlines/{{airline_id}}/airports/{{airport_id_2}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_2}}"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 412,\r\n    \"message\": \"The airport with the given id is not associated with the airline\"\r\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/api/v1"
		},
		{
			"key": "invalid_id",
			"value": "00000000-0000-0000-0000-000000000000"
		}
	]
}